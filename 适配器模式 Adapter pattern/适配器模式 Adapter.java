
适配器模式的用途
　　用电器做例子，笔记本电脑的插头一般都是三相的，即除了阳极、阴极外，还有一个地极。而有些地方的电源插座却只有两极，没有地极。
	电源插座与笔记本电脑的电源插头不匹配使得笔记本电脑无法使用。这时候一个三相到两相的转换器（适配器）就能解决此问题，而这正像是本模式所做的事情。

//c#语言中的数据适配器编辑用法：

DataSet ds = new DataSet();
SqlConnection conn = new SqlConnection(strconnection);
//创建数据适配器对象
SqlDataAdapter sda = new SqlDataAdapter(strSQL,s);
//填充ds数据集，并创建新表
sda.Fill(ds,tb）


//设计模式之适配器模式（Java举例）编辑对象适配器

继承自需要被适配的类，并且实现目标类的接口。
类适配器
将需要被适配的类的对象作为自己私有属性，实现目标类的接口。
要点
1． 适配器模式主要应用于“希望复用一些现存的类，但是接口又与复用环境要求不一致的情况”，在遗留代码复用、类库迁移等方面非常有用。
2． 适配器模式有对象适配器和类适配器两种形式的实现结构，但是类适配器采用“多继承”的实现方式，带来了不良的高耦合，所以一般不推荐使用。对象适配器采用“对象组合”的方式，更符合松耦合精神。
优点
可以使两个没有关系的类在一起运行；
增加了类的透明性；
提高了类的复用；
灵活性好。
说明
适配器模式是一个补偿模式，或者说是一个补救模式，通常来解决接口不相容的问题。一般来说最初设计的时候不会考虑这个模式，只是在有了新的业务需求时，这个是一个补救的模式。

